/*Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character
 while preserving the order of characters. No two characters may map to
 the same character, but a character may map to itself.

Sample Testcase:1
-----------------------------
input=add egg
output=true
*/
import java.util.HashMap;

public class IsomorphicStrings {
    public static boolean isIsomorphic(String s, String t) {
        if (s.length() != t.length()) return false;

        HashMap<Character, Character> mapST = new HashMap<>();
        HashMap<Character, Character> mapTS = new HashMap<>();

        for (int i = 0; i < s.length(); i++) {
            char ch1 = s.charAt(i);
            char ch2 = t.charAt(i);

            if (mapST.containsKey(ch1) && mapST.get(ch1) != ch2) return false;
            if (mapTS.containsKey(ch2) && mapTS.get(ch2) != ch1) return false;

            mapST.put(ch1, ch2);
            mapTS.put(ch2, ch1);
        }

        return true;
    }

    public static void main(String[] args) {
        String s = "add";
        String t = "egg";
        System.out.println(isIsomorphic(s, t)); // Output: true
    }
}
