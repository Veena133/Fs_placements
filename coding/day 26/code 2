/*Given the graph, perform a DFS traversal of the 
graph.


Input Format:
--------------------------------
Number of vertices
Number of edges
source and destination
starting node

Output Format:
--------------------------------
Nodes traversed in DFS order

case=1
input=5 7
0 1
0 4
1 2
1 3
1 4
2 3
3 4
0
output=[0, 4, 3, 2, 1]
  */
import java.util.*;
class Solution{
    void dfs(Graph graph, int start, List<Integer> result){
        boolean vis[] = new boolean[graph.V];
        Deque<Integer> st = new ArrayDeque();
    st.push(start);
    while(!st.isEmpty()){
        int ele = st.pop();
        if(!vis[ele]){
            vis[ele] = true;
            result.add(ele);
        }
    for(int adj:graph.adjList[ele]){
            if (!vis[adj]){
                st.push(adj);
            }
        }
    }
}

}


