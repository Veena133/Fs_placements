You are given three sorted arrays A, B, and C. Your task is to find the minimum possible value of:
abs(max⁡(A[i],B[j],C[k])−min⁡(A[i],B[j],C[k]))
where A[i] belongs to array A, B[j] belongs to array B, and C[k] belongs to array C.

Sample Testcase:1
----------------------------------
input=
A=1 4 10 15     (size = 4)
B=2 15 20        (size = 3)
C=10 12 30 35 40 (size = 5)
output=3


 Given an N x M grid, count the number of ways to reach (N-1, M-1) from (0,0).
 Allowed moves: Right (→) and Down (↓). Use only recursion

Sample Testcase:1
---------------------------
input=3 3
output=6
/*import java.util.*;
public class Solution{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int n =sc.nextInt();
        int m=sc.nextInt();
        int c= count(n,m);
        System.out.println(c);
    }
    public static int count(int n ,int m){
        if(n==1 && m==1){
            return 1;
        }
        if(n<1 || m<1){
            return 0;
        }
        return count(n-1,m)+count(n,m-1);
    }
}*/
Or 
Ways(0,0,n,m)
If(i==n-1 &&j==m-1){
Return 1;
If(i<1 || j<1){
Return 1;
