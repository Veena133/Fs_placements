/*There are some cubes, each cube is printed with an alphabet [A-Z].
Using these cubes, you can create non-empty distinct words.
and length of the words should be 0< length <= no.of.cubes.

You are given a string of alphabets S, 
Your task is to findout number of possible non-empty distinct words

Input Format:
-------------
A string S, consist of A-Z letters only.

Output Format:
--------------
Print an integer, number of possible non-empty distinct words.


Sample Input-1:
---------------
EGG

Sample Output-1:
----------------
8

Explanation:
--------------
The possible distinct words are "E", "G", "EG", "GG", "GE", "EGG", "GEG", "GGE".


Sample Input-2:
---------------
MADAM

Sample Output-2:
----------------
89
  */
import java.util.*;
public class Solution{
    static HashSet<String> hs = new HashSet<>();
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        boolean vis[]= new boolean[s.length()];
        backtrack(s,"",vis);
        System.out.print(hs.size());
    }
    static void backtrack(String s,String curr,boolean vis[]){
        if(!curr.isEmpty())hs.add(curr);
        if(curr.length() == s.length())return;
        
        for(int i=0;i<s.length();i++){
            if(vis[i]) continue;
            
            vis[i] =true;
            backtrack(s,curr+s.charAt(i),vis);
            vis[i] = false;
        }
    

}

}

