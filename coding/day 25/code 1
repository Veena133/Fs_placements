/*You will be given the matrix of size R*C,

You have to return the matrix in special order as shown in the sample tescases.
 

Input Format:
-------------
Line-1 -> Two integers R and C, size of matrix.
Next R-Lines -> C space separated integers

Output Format:
--------------
Print R-Lines -> C space separated integeurs, in special order.


Sample Input-1:
---------------
3 3
1 2 3
4 5 6
7 8 9

Sample Output-1:
----------------
1 2 3
6 9 8
7 4 5

Sample Input-2:
---------------
3 4
1 2 3 4
5 6 7 8
9 10 11 12

Sample Output-2:
----------------
1 2 3 4
8 12 11 10
9 5 6 7
  */
import java.util.*;
class Solution{
    public static void dfs (int mat[][],int r,int c){
        int res[][] = new int[r][c];
        int top=0,down = r-1,left =0,right = c-1;
        ArrayList<Integer> al = new ArrayList<>();
        while(top<=down && left<=right){
            for(int i = left;i<=right;i++){
                al.add(mat[top][i]);
            }
            top++;
            for(int i=top;i<=down;i++){
                al.add(mat[i][right]);
            }
            right--;
            if(top<=down){
                for(int i=right;i>=left;i--){
                   al.add(mat[down][i]);
                }
                down--;
            }
            if(left<=right){
                for(int i=down;i>=top;i--){
                    al.add(mat[i][left]);
                }
                left++;
            }
        }
        int k=0;
        while(k<al.size()){
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                res[i][j]=al.get(k);
                k++;
            }
        }
    }
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                System.out.print(res[i][j]+" ");
            }
            System.out.println();
        }
    }
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        int c = sc.nextInt();
        int a[][]= new int[r][c];
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                a[i][j]=sc.nextInt();
            }
        }
        dfs(a,r,c);
    }

}


