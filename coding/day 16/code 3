/*Given an array of positive integers arr, return the sum of all possible odd-length subarrays of arr.

A subarray is a contiguous subsequence of the array.

Sample Testcase:1
----------------------------------------------
input=1 4 2 5 3
output=58

Explanation:
-----------------------
The odd-length subarrays of arr and their sums are:
[1] = 1
[4] = 4
[2] = 2
[5] = 5
[3] = 3
[1,4,2] = 7
[4,2,5] = 11
[2,5,3] = 10
[1,4,2,5,3] = 15
If we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58
*/
import java.util.*;
class Solution{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String s[] = sc.nextLine().split(" ");
        int a[] = new int[s.length];
        for (int i = 0; i < a.length; i++){
            a[i] = Integer.parseInt(s[i]);
        }
        int c=0;
        List<Integer> l=new ArrayList<>();
        for(int i=0;i<a.length;i++){
            int sum=a[i];
            l.add(a[i]);
            for (int j=i+1;j<a.length;j++){
                int sum1=0;
                if((j-i+1)%2==1){
                    for(int k=i;k<=j;k++){
                        sum1 = sum1 + a[k];
                    }
                    l.add(sum1);
                    }
                }
        }
        for(int i=0;i<l.size();i++){
            c=c+l.get(i);
        }
        System.out.println(c);
        }
}
